<Activity mc:Ignorable="sap sap2010 sads" x:Class="Get_Trade_From_Queue" this:Get_Trade_From_Queue.StrQueueCSVPath="C:\Users\Drone-X\Documents\UiPath\Xiphos\SMACrossover\EURGBP_TRADEQUEUE.csv"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="StrQueueCSVPath" Type="InArgument(x:String)" />
    <x:Property Name="StrSymbol" Type="OutArgument(x:String)" />
    <x:Property Name="StrType" Type="OutArgument(x:String)" />
    <x:Property Name="StrAmount" Type="OutArgument(x:String)" />
    <x:Property Name="StrEntry" Type="OutArgument(x:String)" />
    <x:Property Name="StrStop" Type="OutArgument(x:String)" />
    <x:Property Name="StrLimit" Type="OutArgument(x:String)" />
    <x:Property Name="BChecked" Type="OutArgument(x:Boolean)" />
    <x:Property Name="BGotTrade" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Get_Trade_From_Queue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Get Trade From Queue" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bQueueFileExists" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtTrades" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Started: Get Trade From Queue" />
        <If Condition="[string.IsNullOrEmpty(StrQueueCSVPath)]" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw Exception="[new exception(&quot;Trade CSV queue file not specified&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
        </If>
        <ui:PathExists DisplayName="Path exists" Exists="[bQueueFileExists]" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[StrQueueCSVPath]" PathType="File" />
        <If Condition="[bQueueFileExists = false]" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Throw Exception="[new exception(&quot;Trade queue file does not exist&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Then>
        </If>
        <Sequence DisplayName="Do Work" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <ui:ReadCsvFile DataTable="[dtTrades]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[StrQueueCSVPath]" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
          <If Condition="[dtTrades.Rows.Count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrSymbol]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtTrades.Rows(0)("Symbol").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtTrades.Rows(0)("Type").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtTrades.Rows(0)("Amount(K)").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrStop]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtTrades.Rows(0)("Stop").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrLimit]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtTrades.Rows(0)("Limit").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:RemoveDataRow Row="{x:Null}" DataTable="[dtTrades]" DisplayName="Remove data row" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="0" />
                <ui:WriteCsvFile AddHeaders="True" DataTable="[dtTrades]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[StrQueueCSVPath]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[BGotTrade]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[BGotTrade]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
        </Sequence>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[BChecked]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="End: Get Trade From Queue" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BChecked]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Failed to check trade queue: &quot; &amp; exception.ToString]" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>d0JDOlxVc2Vyc1xEcm9uZS1YXERvY3VtZW50c1xVaVBhdGhcWGlwaG9zXEdldCBUcmFkZSBGcm9tIFF1ZXVlLnhhbWw9AXQBwAEBAk4DxgEOAgEBVAevARICAQq3AQvBARYCAQJVCVWYAQIBTlYJWg4CAUlbCVuoAQIBRFwJYA4CAT9hCaUBFAIBEaYBCa0BEgIBDa4BCa4BlAECAQu4AQ2/ARYCAQbAAQ3AAcMBAgEDVXZVlQECAU9WF1ZAAgFKWA1YjAECAUxbOVtNAgFHW4IBW5UBAgFFXBdcMwIBQF4NXokBAgFCYgtirAECATpjC6QBEAIBEqsBNasBOQIBEKgBNqgBQAIBDq4Bdq4BkQECAQy9ATm9AT4CAQm6ATq6AUQCAQfAAXrAAcABAgEEWB5YXwIBTV4eXlwCAUNiJWIxAgE9YmZieQIBO2MZYzcCARNlD5gBGgIBGJsBD6IBGAIBFGYRbRoCATZuEXUaAgEydhF9GgIBLn4RhQEaAgEqhgERjQEaAgEmjgERjgGoAQIBIo8BEY8BxwECAR2QARGXARoCARmgATugAUACARedATydAUcCARVrPGthAgE5aD1oSAIBN3M8c18CATVwPXBGAgEzezx7ZAIBMXg9eEgCAS+DATyDAV8CAS2AAT2AAUYCASuLATyLAWACASmIAT2IAUcCASeOAaIBjgGlAQIBJY4BPI4BSAIBI48BPo8BSgIBII8BgAGPAZMBAgEelQE9lQFBAgEckgE+kgFJAgEa</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="625,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="625,208" />
      <sap2010:ViewStateData Id="PathExists_1" sap:VirtualizedContainerService.HintSize="625,89" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="625,208" />
      <sap2010:ViewStateData Id="ReadCsvFile_1" sap:VirtualizedContainerService.HintSize="603,59" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="RemoveDataRow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="WriteCsvFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="603,1021" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="625,1244">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="625,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="647,2355">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="651,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="665,2662" />
      <sap2010:ViewStateData Id="Get_Trade_From_Queue_1" sap:VirtualizedContainerService.HintSize="705,2822" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>