<Activity mc:Ignorable="sap sap2010 sads" x:Class="FXCM___Open_Market_Order" this:FXCM___Open_Market_Order.BLong="False" this:FXCM___Open_Market_Order.StrLimit="1.09" this:FXCM___Open_Market_Order.StrStop="1.01" this:FXCM___Open_Market_Order.StrInstrument="EUR/USD" this:FXCM___Open_Market_Order.StrAmount="2"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BLong" Type="InArgument(x:Boolean)" />
    <x:Property Name="StrLimit" Type="InArgument(x:String)" />
    <x:Property Name="StrStop" Type="InArgument(x:String)" />
    <x:Property Name="StrInstrument" Type="InArgument(x:String)" />
    <x:Property Name="StrAmount" Type="InArgument(x:String)" />
    <x:Property Name="BOpenedTrade" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StrEntry" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>FXCM___Open_Market_Order_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="FXCM - Open Market Order" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bFXCMExists" />
      <Variable x:TypeArguments="x:String" Default="[&quot;&lt;wnd app='fxtspp.exe' cls='ComboLBox' /&gt;&lt;ctrl name='Symbol:' role='list' /&gt;&lt;ctrl name='&quot; &amp; StrInstrument &amp; &quot;' role='list item' /&gt;&quot;]" Name="strInstrumentSelector" />
      <Variable x:TypeArguments="x:Boolean" Name="bAdvancedExists" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Started: FXCM - Open Market Order" />
        <ui:UiElementExists DisplayName="Element Exists" Exists="[bFXCMExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
          <ui:UiElementExists.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='FXCM Trading Station' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:UiElementExists.Target>
        </ui:UiElementExists>
        <If Condition="[bFXCMExists=false]" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw Exception="[new exception(&quot;FXCM does not exist&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
        </If>
        <Sequence DisplayName="Do Work" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <If Condition="[BLong=True]" DisplayName="If Long click Buy if not click Sell" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='FXCM Trading Station' /&gt;&lt;wnd cls='XTPDockBar' /&gt;&lt;ctrl name='Buy' role='menu item' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:Click.Target>
              </ui:Click>
            </If.Then>
            <If.Else>
              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='FXCM Trading Station' /&gt;&lt;wnd cls='XTPDockBar' /&gt;&lt;ctrl name='Sell' role='menu item' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:Click.Target>
              </ui:Click>
            </If.Else>
          </If>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;ctrl name='Symbol:' role='combo box' /&gt;&lt;ctrl automationid='DropDown' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:Click.Target>
          </ui:Click>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[strInstrumentSelector]" WaitForReady="INTERACTIVE" />
            </ui:Click.Target>
          </ui:Click>
          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[StrAmount]">
            <ui:TypeInto.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd aaname='Amount*' cls='ComboBox' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:TypeInto.Target>
          </ui:TypeInto>
          <ui:UiElementExists DisplayName="Element Exists" Exists="[bAdvancedExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd ctrlid='1842' title='Advanced&amp;gt;&amp;gt;' /&gt;" TimeoutMS="100" WaitForReady="INTERACTIVE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[bAdvancedExists]" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd ctrlid='1842' title='Advanced&amp;gt;&amp;gt;' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:Click.Target>
              </ui:Click>
            </If.Then>
          </If>
          <If Condition="[not StrStop = &quot;N/A&quot; and not string.IsNullOrEmpty(StrStop)]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" sap2010:WorkflowViewState.IdRef="Check_1">
                  <ui:Check.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd title='Stop:' cls='Button' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:Check.Target>
                </ui:Check>
                <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[StrStop]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd ctrlid='4421' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:TypeInto.Target>
                </ui:TypeInto>
              </Sequence>
            </If.Then>
          </If>
          <If Condition="[not StrLimit = &quot;N/A&quot; and not string.IsNullOrEmpty(StrLimit)]" sap2010:WorkflowViewState.IdRef="If_4">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" sap2010:WorkflowViewState.IdRef="Check_2">
                  <ui:Check.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd title='Limit:' cls='Button' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:Check.Target>
                </ui:Check>
                <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_4" SendWindowMessages="False" SimulateType="False" Text="[StrLimit]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd ctrlid='4422' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:TypeInto.Target>
                </ui:TypeInto>
              </Sequence>
            </If.Then>
          </If>
          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text" sap2010:WorkflowViewState.IdRef="GetValue_1">
            <ui:GetValue.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd ctrlid='4412' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:GetValue.Target>
            <ui:GetValue.Value>
              <OutArgument x:TypeArguments="x:String">[StrEntry]</OutArgument>
            </ui:GetValue.Value>
          </ui:GetValue>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='fxtspp.exe' title='Create Market Order' /&gt;&lt;wnd title='OK' cls='Button' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:Click.Target>
          </ui:Click>
        </Sequence>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[BOpenedTrade]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="End: FXCM - Open Market Order" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Failed to open market order: &quot; &amp; exception.ToString]" />
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BOpenedTrade]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>d0ZDOlxVc2Vyc1xEcm9uZS1YXERvY3VtZW50c1xVaVBhdGhcWGlwaG9zXEZYQ00gLSBPcGVuIE1hcmtldCBPcmRlci54YW1sRwGBAgGJAgEGAaEBAaYBAQUBswIBtQIBBAHOAQHTAQEDAXIBeAECSwOWAg4CAQFONE7pAQIBClIH/wESAgEMhwILkQIWAgECUwlTnAECAVNUCVgeAgFPWQldDgIBSl4J9QEUAgET9gEJ/QESAgEP/gEJ/gGYAQIBDYgCDYgCwwECAQeJAg2QAhYCAQNTdlOZAQIBVFZjVqABAgFSVEFUUAIBUFkXWSwCAUtbDVt9AgFNXwuCARACAUODAQuRARYCAUGSAQugARYCAT6hAQulARkCATqmAQuqASACATWrAQu9ARACATC+AQvNARACASXOAQvdARACARreAQvlARkCARbmAQv0ARYCART7ATX7ATkCARL4ATb4AUQCARD+AXb+AZUBAgEOiAJ6iALAAQIBCI4COY4CPgIBBosCOosCSAIBBFseW1ACAU5fGV8nAgFEYQ9vGgIBSHIPgAEaAgFGjwFljwGIAgIBQp4BZZ4BfgIBP6MBZaMBzgECAT2hAZQCoQGhAgIBO6gBUKgByAECATmoAdMBqAHYAQIBOKYBQ6YBVgIBNqsBGasBLAIBMa0BD7sBGgIBM74BGb4BYAIBJsABD8sBGgIBKc4BGc4BYgIBG9ABD9sBGgIBHuMBN+MBQQIBF+ABZeABvAECARnyAWXyAcYBAgEVbWlt7gECAUl+aX7vAQIBR7kBabkB4QECATTBARHFARwCAS7GARHKAR8CASrRARHVARwCASPWARHaAR8CAR/DAWvDAc8BAgEvyAFryAHNAQIBLcYBmgLGAaUCAgEr0wFr0wHQAQIBJNgBa9gBzQECASLWAZoC1gGmAgIBIA==</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="675,208" />
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Click_10" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="653,216" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="653,68" />
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="653,68" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="653,96" />
      <sap2010:ViewStateData Id="UiElementExists_2" sap:VirtualizedContainerService.HintSize="653,68" />
      <sap2010:ViewStateData Id="Click_8" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="653,216" />
      <sap2010:ViewStateData Id="Check_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,328">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="653,476" />
      <sap2010:ViewStateData Id="Check_2" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="TypeInto_4" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,328">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="653,476" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="653,68" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="653,68" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="675,2304">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="697,3146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="701,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="715,3373" />
      <sap2010:ViewStateData Id="FXCM___Open_Market_Order_1" sap:VirtualizedContainerService.HintSize="755,3453" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>